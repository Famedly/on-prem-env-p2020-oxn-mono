#jinja2: lstrip_blocks: "True", trim_blocks: "True"
{
  # List of connection strings for outbound peer connections in URI format,
  # e.g. tls://a.b.c.d:e or socks://a.b.c.d:e/f.g.h.i:j. These connections
  # will obey the operating system routing table, therefore you should
  # use this section when you may connect via different interfaces.
  Peers: [
    {% for name, info in yggdrasil_extra_peers.items() %}
      {% if info.peering is defined and info.peering.global is defined %}
    "{{ info.peering.global }}", # {{ name }}
      {% endif %}
    {% endfor %}
    {% for peer in yggdrasil_ansible_peers %}
      {% if hostvars[peer] is defined
        and hostvars[peer].yggdrasil_listen_address is defined %}
    "tls://{{ hostvars[peer].yggdrasil_listen_address }}", # {{ peer }}
      {% endif %}
    {% endfor %}
  ]

  # List of connection strings for outbound peer connections in URI format,
  # arranged by source interface, e.g. { "eth0": [ tls://a.b.c.d:e ] }.
  # Note that SOCKS peerings will NOT be affected by this option and should
  # go in the "Peers" section instead.
  InterfacePeers: {
    {% for interface in yggdrasil_extra_peers.values() | map(attribute='peering.interfaces') | reject('undefined') | map('dict2items') | flatten | map(attribute='key') | list %}
    "{{ interface }}": [
      {% for name, info in yggdrasil_extra_peers.items() %}
        {% if info.peering is defined
	  and info.peering.interfaces is defined
	  and info.peering.interfaces[interface] is defined %}
      "{{ info.peering.interfaces[interface] }}", # {{ name }}
        {% endif %}
      {% endfor %}
    ]
    {% endfor %}
  }

  # Listen addresses for incoming connections. You will need to add
  # listeners in order to accept incoming peerings from non-local nodes.
  # Multicast peer discovery will work regardless of any listeners set
  # here. Each listener should be specified in URI format as above, e.g.
  # tcp://0.0.0.0:0 or tcp://[::]:0 to listen on all interfaces.
  Listen: [
    "tls://{{ yggdrasil_config_listen_address }}",
  ]

  # Listen address for admin connections. Default is to listen for local
  # connections either on TCP/9001 or a UNIX socket depending on your
  # platform. Use this value for yggdrasilctl -endpoint=X. To disable
  # the admin socket, use the value "none" instead.
  AdminListen: "{{ yggdrasil_admin_listen_address }}"

  # Configuration for which interfaces multicast peer discovery should be
  # enabled on. Each entry in the list should be a json object which may
  # contain Regex, Beacon, Listen, and Port. Regex is a regular expression
  # which is matched against an interface name, and interfaces use the
  # first configuration that they match gainst. Beacon configures whether
  # or not the node should send link-local multicast beacons to advertise
  # their presence, while listening for incoming connections on Port.
  # Listen controls whether or not the node listens for multicast beacons
  # and opens outgoing connections.
  MulticastInterfaces: [
    {% for interface in yggdrasil_multicast_interfaces %}
    {
	Regex: "{{ interface.regex }}",
	Beacon: {{ interface.beacon | bool | tojson }},
	Listen: {{ interface.listen | bool | tojson }},
	Port: {{ interface.port }}
    }
    {% endfor %}
  ]

  # List of peer public keys to allow incoming peering connections
  # from. If left empty/undefined then all connections will be allowed
  # by default. This does not affect outgoing peerings, nor does it
  # affect link-local peers discovered via multicast.
  AllowedPublicKeys: [
    {% if yggdrasil_limit_incoming_connections %}
      {% for name, info in yggdrasil_extra_peers.items() %}
        {% if info.key is defined %}
    "{{ info.key }}", # {{ name }}
        {% endif %}
      {% endfor %}
      {% for peer in yggdrasil_ansible_peers %}
        {% if hostvars[peer] is defined
	  and hostvars[peer].yggdrasil_public_key is defined %}
    "{{ hostvars[peer].yggdrasil_public_key }}", # {{ peer }}
        {% endif %}
      {% endfor %}
    {% endif %}
  ]

  # Your public key. Your peers may ask you for this to put
  # into their AllowedPublicKeys configuration.
  PublicKey: "{{ yggdrasil_public_key }}"

  # Your private key. DO NOT share this with anyone!
  PrivateKey: "{{ yggdrasil_private_key }}"

  # Local network interface name for TUN adapter, or "auto" to select
  # an interface automatically, or "none" to run without TUN.
  IfName: auto

  # Maximum Transmission Unit (MTU) size for your local TUN interface.
  # Default is the largest supported size for your platform. The lowest
  # possible value is 1280.
  IfMTU: 65535

  # By default, nodeinfo contains some defaults including the platform,
  # architecture and Yggdrasil version. These can help when surveying
  # the network and diagnosing network routing problems. Enabling
  # nodeinfo privacy prevents this, so that only items specified in
  # "NodeInfo" are sent back if specified.
  NodeInfoPrivacy: {{ yggdrasil_node_info_privacy | bool | tojson }}

  # Optional node info. This must be a { "key": "value", ... } map
  # or set as null. This is entirely optional but, if set, is visible
  # to the whole network on request.
  NodeInfo: {{ yggdrasil_node_info | tojson }}
}
